{
  "root": true,
  "env": {
    "browser": true,
    "node": true
  },
  "parser": "@typescript-eslint/parser",
  "settings": {
    "react": {
      "version": "detect"
    }
  },
  "plugins": [
    "@typescript-eslint",
    "react-hooks",
    "import",
    "react"
  ],
  "extends": [
    "eslint:recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:react-hooks/recommended",
    "plugin:import/typescript",
    "plugin:react/recommended"
  ],
  "ignorePatterns": [
    "lib"
  ],
  "rules": {
    // Import and module-related rules
    "import/order": [
      "error",
      {
        "groups": [
          "external",
          "parent",
          [
            "sibling",
            "index"
          ]
          //          "type"
        ]
        //        "newlines-between": "always"
      }
    ],
    "eslint-plugin-import/no-unresolved": "off",
    // React-specific rules
    "react/react-in-jsx-scope": "off",
    "react/display-name": "off",
    "react/prop-types": "off",
    "react/function-component-definition": [
      "error",
      {
        "namedComponents": "arrow-function",
        "unnamedComponents": "arrow-function"
      }
    ],
    "react/jsx-curly-brace-presence": [
      "error",
      {
        "props": "never"
      }
    ],
    // TypeScript-specific rules
    "@typescript-eslint/no-explicit-any": "warn",
    "@typescript-eslint/consistent-type-imports": "warn",
    "@typescript-eslint/naming-convention": [
      "error",
      {
        "selector": "variable",
        "format": null,
        "leadingUnderscore": "allow",
        "trailingUnderscore": "allow"
      },
      {
        "selector": "typeLike",
        "format": [
          "PascalCase"
        ]
      }
    ],
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "ignoreRestSiblings": true
      }
    ],
    // Code quality and formatting rules
    "block-spacing": [
      "error",
      "always"
    ],
    "camelcase": [
      "warn",
      {
        "properties": "never",
        "ignoreDestructuring": true
      }
    ],
    "comma-spacing": [
      "error"
    ],
    "semi-spacing": "error",
    "semi": "off",
    "@typescript-eslint/semi": [
      "error"
    ],
    "max-len": [
      "error",
      {
        "code": 140,
        "comments": 0,
        "ignorePattern": "^import |//|\"[^\"]{100,}\""
      }
    ],
    "eqeqeq": [
      "error",
      "smart"
    ],
    "no-console": [
      "warn",
      {
        "allow": [
          "warn",
          "error"
        ]
      }
    ],
    "no-empty": [
      "error",
      {
        "allowEmptyCatch": true
      }
    ],
    "no-irregular-whitespace": [
      "error",
      {
        "skipStrings": false
      }
    ],
    "guard-for-in": "error",
    "keyword-spacing": "error",
    "key-spacing": [
      "error"
    ],
    "quotes": [
      "error",
      "double",
      {
        "allowTemplateLiterals": true,
        "avoidEscape": true
      }
    ],
    "object-curly-spacing": [
      "error",
      "always"
    ],
    "eol-last": "error",
    "no-trailing-spaces": "error",
    "no-var": "error",
    "no-multiple-empty-lines": [
      "error",
      {
        "max": 1,
        "maxBOF": 0
      }
    ],
    "no-multi-spaces": [
      "error"
    ],
    "no-whitespace-before-property": [
      "error"
    ],
    "space-before-blocks": [
      "error",
      "always"
    ],
    "space-in-parens": [
      "error",
      "never"
    ],
    "arrow-spacing": [
      "error"
    ],
    // Spacing rules for code structure
    "padding-line-between-statements": [
      "error",
      {
        "blankLine": "always",
        "prev": "*",
        "next": "return"
      }
    ],
    // React hooks rules
    "react-hooks/rules-of-hooks": "error",
    "react-hooks/exhaustive-deps": "error"
  }
}
